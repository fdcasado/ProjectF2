@model ProjectF2.Models.Pedido

@{
    ViewBag.Title = "NovoPedido";
}

<h2>NovoPedido</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pedido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Modelo.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Modelo.Marca,
                    new SelectList(ViewBag.ListaMarcas, "MarcaId", "NomeMarca"),
                    "-- escolha a marca--",
                    new { @class = "form-control", @onchange = "FillModelos()" })
                @Html.ValidationMessageFor(model => model.Modelo.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModeloId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ModeloId,
                    new SelectList(Enumerable.Empty<SelectListItem>(), "ModeloId", "NomeModelo"),
                    "",
                    new { @class = "form-control" })
                @*Html.EditorFor(model => model.ModeloId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.ModeloId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UsuarioId, "UsuarioId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsuarioId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UsuarioId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.AnoModelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AnoModelo", new SelectList(ViewBag.Years as System.Collections.IEnumerable), "", new { @class = "form-control" } )
                @*Html.EditorFor(model => model.AnoModelo, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.AnoModelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPecaId, "Tipo da Peça", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoPecaId,
                    new SelectList(ViewBag.TipoPecas, "TipoPecaId", "NomeTipoPeca"),
                    "-- escolha o tipo da peça--",
                    new { @class = "form-control" })

                @*Html.DropDownList("TipoPecaId", null, "Escolha o tipo da peça", htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.TipoPecaId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*
    <div class="form-group">
        @Html.LabelFor(model => model.DataHora, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataHora, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataHora, "", new { @class = "text-danger" })
        </div>
    </div>
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.DescricaoPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescricaoPedido, new { rows = 5, cols = 100, @class = "form-control textarea" })
                @Html.ValidationMessageFor(model => model.DescricaoPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enviar Pedido de Cotação" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {

@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/jscript">
        function FillModelos() {
            var marcaId = $('#Modelo_Marca').val();
            $.ajax({
                url: '/Usuario/FillModelos/' + marcaId,
                type: "GET",
                dataType: "JSON",
                data: { Modelo_Marca: marcaId},
                success: function (modelos) {
                    $("#ModeloId").html("'<option>-- escolha o modelo--</option>'"); // clear before appending new list
                    $.each(modelos, function (i, modelo) {
                        $("#ModeloId").append(
                            $('<option></option>').val(modelo.ModeloId).html(modelo.NomeModelo));
                    });
                }
            });
        }
</script>


}
